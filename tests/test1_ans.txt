; ModuleID = 'module'
source_filename = "module"

@a = global i32 10
@b = global i32 10
@arr = global <3 x i32> <i32 10, i32 4, i32 6>

define i32 @main() {
mainEntry:
  %res = alloca i32, align 4
  store i32 0, i32* %res, align 4
  br label %while_cond

while_cond:                                       ; preds = %mainEntry
  %0 = load i32, i32* getelementptr (<3 x i32>, <3 x i32>* @arr, i32 0, i32 0), align 4
  %1 = icmp sgt i32 %0, 0
  %2 = zext i1 %1 to i32
  %3 = icmp ne i32 %2, 0
  br i1 %3, label %while_true, label %while_exit

while_true:                                       ; preds = %while_cond
  %4 = load i32, i32* %res, align 4
  %5 = add i32 %4, 1
  store i32 %5, i32* %res, align 4
  br label %while_exit

while_exit:                                       ; preds = %while_true, %while_cond
  %6 = load i32, i32* %res, align 4
  ret i32 %6
}
